# user directive has a default value of nobody. You can add user directive to define the account under which Nginx worker process will be executed on the server. The syntax for user directive is like user <user_name> <group_name>. The user should exist on the server before Nginx starts or else there will be an error while starting Nginx services.
user  nginx;

# worker_process directive has a default value of 1 and it implies the number of worker processes that will be spawned by Nginx. Setting the value to auto is also permitted and in that case Nginx tries to autodetect the number of cores
worker_processes  1;

# error_log directive can be applied in multiple contexts like main, http, mail, stream, server, and location. Here, you see it applied in the main context. The first parameter /var/log/nginx/error.log tells you the the name of the file where the log file will be created, whereas the second parameter warn informs you that anything above the warning level will be logged.
# The logging levels are defined in increasing order as you can see from the list below and it is important to note that if you set the level to error, then the logs of type warning, notice, and info will be ignored.
error_log  /var/log/nginx/error.log warn;

pid        /var/run/nginx.pid;


events {
    # worker_connections directive allows a maximum of 1024 concurrent worker connections.
    worker_connections  1024;
}


# The HTTP context (or block) can be considered the heart of the configuration system for an Nginx web server.
http {

    # If you view /etc/nginx/mime.types you will find a block of text that is nothing but another directive called types.
    include       /etc/nginx/mime.types;
    
     # default_type directive has a value of application/octet-stream. It specifies the default MIME type if Nginx fails to find a specific one in the /etc/nginx/mine.types.
    default_type  application/octet-stream;

    log_format  main  '$proxy_host - $http_x_real_ip - $proxy_add_x_forwarded_for '
                      '$remote_addr - $remote_user [$time_local] "$request" '
                      '<$status> $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # it means that the call will not block on disk I/O.
    # As you can guess, it has a huge advantage and enables Nginx to scale very well, especially while serving large files.
    sendfile        on;

    # This is the reason why this directive exists. It allows the server to close the connection in 65 seconds automatically if the client doesn't return and the connection is idle. On a busy server, you may choose to reduce this timeout
    keepalive_timeout  65;

    # gzip directive compresses the output so that lesser bandwidth is consumed per request
    gzip  on;

    # include any other confirguration files located under the /etc/nginx/conf.d. nginx.conf file is a superset of the child configuration files on the nginx platform.
    include /etc/nginx/conf.d/*.conf;
}